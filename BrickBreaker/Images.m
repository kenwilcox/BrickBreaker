//
//  Images.m
//  BrickBreaker
//
//  Created by Kenneth Wilcox on 10/22/14.
//  Copyright (c) 2014 Kenneth Wilcox. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "Images.h"


@implementation Images

#pragma mark Cache

static UIColor* _ballBottomColor = nil;
static UIColor* _lightColor = nil;
static UIColor* _bottomColor = nil;
static UIColor* _edgeColor = nil;
static UIColor* _ballBorderColor = nil;
static UIColor* _ballGlowColor = nil;
static UIColor* _ballReflectionColor = nil;
static UIColor* _topColor = nil;
static UIColor* _darkColor = nil;

static UIImage* _imageOfPaddle = nil;
static UIImage* _imageOfBall = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _ballBottomColor = [UIColor colorWithRed: 0.414 green: 0.769 blue: 0.94 alpha: 1];
    _lightColor = [UIColor colorWithRed: 0.244 green: 0.694 blue: 0.925 alpha: 1];
    _bottomColor = [UIColor colorWithRed: 0.774 green: 0.774 blue: 0.774 alpha: 1];
    _edgeColor = [UIColor colorWithRed: 0.076 green: 0.411 blue: 0.606 alpha: 1];
    _ballBorderColor = [UIColor colorWithRed: 0.119 green: 0.611 blue: 0.901 alpha: 1];
    _ballGlowColor = [UIColor colorWithRed: 0.706 green: 0.893 blue: 0.975 alpha: 1];
    _ballReflectionColor = [UIColor colorWithRed: 0.576 green: 0.835 blue: 0.96 alpha: 1];
    _topColor = [UIColor colorWithRed: 0.816 green: 0.816 blue: 0.816 alpha: 1];
    _darkColor = [UIColor colorWithRed: 0.099 green: 0.576 blue: 0.858 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)ballBottomColor { return _ballBottomColor; }
+ (UIColor*)lightColor { return _lightColor; }
+ (UIColor*)bottomColor { return _bottomColor; }
+ (UIColor*)edgeColor { return _edgeColor; }
+ (UIColor*)ballBorderColor { return _ballBorderColor; }
+ (UIColor*)ballGlowColor { return _ballGlowColor; }
+ (UIColor*)ballReflectionColor { return _ballReflectionColor; }
+ (UIColor*)topColor { return _topColor; }
+ (UIColor*)darkColor { return _darkColor; }

#pragma mark Drawing Methods

+ (void)drawPaddle
{

    //// GamePaddle
    {
        //// Outer Edge Drawing
        UIBezierPath* outerEdgePath = UIBezierPath.bezierPath;
        [outerEdgePath moveToPoint: CGPointMake(21.85, 0)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(14.05, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(11.85, 2)];
        [outerEdgePath addCurveToPoint: CGPointMake(4.85, 4.9) controlPoint1: CGPointMake(9.12, 2) controlPoint2: CGPointMake(6.78, 2.97)];
        [outerEdgePath addLineToPoint: CGPointMake(4.6, 5.2)];
        [outerEdgePath addCurveToPoint: CGPointMake(2, 12) controlPoint1: CGPointMake(2.87, 7.1) controlPoint2: CGPointMake(2, 9.37)];
        [outerEdgePath addCurveToPoint: CGPointMake(4.85, 19.05) controlPoint1: CGPointMake(2, 14.77) controlPoint2: CGPointMake(2.95, 17.12)];
        [outerEdgePath addCurveToPoint: CGPointMake(11.85, 22) controlPoint1: CGPointMake(6.78, 21.02) controlPoint2: CGPointMake(9.12, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(19.35, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 24)];
        [outerEdgePath addLineToPoint: CGPointMake(11.85, 24)];
        [outerEdgePath addCurveToPoint: CGPointMake(3.45, 20.45) controlPoint1: CGPointMake(8.55, 24) controlPoint2: CGPointMake(5.75, 22.82)];
        [outerEdgePath addCurveToPoint: CGPointMake(0, 12) controlPoint1: CGPointMake(1.15, 18.12) controlPoint2: CGPointMake(0, 15.3)];
        [outerEdgePath addCurveToPoint: CGPointMake(3.1, 3.9) controlPoint1: CGPointMake(0, 8.87) controlPoint2: CGPointMake(1.03, 6.17)];
        [outerEdgePath addLineToPoint: CGPointMake(3.4, 3.5)];
        [outerEdgePath addCurveToPoint: CGPointMake(7.6, 0.75) controlPoint1: CGPointMake(4.67, 2.23) controlPoint2: CGPointMake(6.07, 1.32)];
        [outerEdgePath addCurveToPoint: CGPointMake(11.85, 0) controlPoint1: CGPointMake(8.9, 0.25) controlPoint2: CGPointMake(10.32, 0)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 0)];
        [outerEdgePath closePath];
        [outerEdgePath moveToPoint: CGPointMake(3.4, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(3.45, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(3.4, 3.5)];
        [outerEdgePath closePath];
        [outerEdgePath moveToPoint: CGPointMake(82.15, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 0)];
        [outerEdgePath addLineToPoint: CGPointMake(92.15, 0)];
        [outerEdgePath addCurveToPoint: CGPointMake(96.4, 0.75) controlPoint1: CGPointMake(93.68, 0) controlPoint2: CGPointMake(95.1, 0.25)];
        [outerEdgePath addCurveToPoint: CGPointMake(100.55, 3.5) controlPoint1: CGPointMake(97.93, 1.32) controlPoint2: CGPointMake(99.32, 2.23)];
        [outerEdgePath addLineToPoint: CGPointMake(100.9, 3.9)];
        [outerEdgePath addCurveToPoint: CGPointMake(104, 12) controlPoint1: CGPointMake(102.97, 6.17) controlPoint2: CGPointMake(104, 8.87)];
        [outerEdgePath addCurveToPoint: CGPointMake(100.55, 20.45) controlPoint1: CGPointMake(104, 15.3) controlPoint2: CGPointMake(102.85, 18.12)];
        [outerEdgePath addCurveToPoint: CGPointMake(92.15, 24) controlPoint1: CGPointMake(98.25, 22.82) controlPoint2: CGPointMake(95.45, 24)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 24)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(84.65, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(92.15, 22)];
        [outerEdgePath addCurveToPoint: CGPointMake(99.15, 19.05) controlPoint1: CGPointMake(94.88, 22) controlPoint2: CGPointMake(97.22, 21.02)];
        [outerEdgePath addCurveToPoint: CGPointMake(102, 12) controlPoint1: CGPointMake(101.05, 17.12) controlPoint2: CGPointMake(102, 14.77)];
        [outerEdgePath addCurveToPoint: CGPointMake(99.4, 5.2) controlPoint1: CGPointMake(102, 9.37) controlPoint2: CGPointMake(101.13, 7.1)];
        [outerEdgePath addLineToPoint: CGPointMake(99.15, 4.9)];
        [outerEdgePath addCurveToPoint: CGPointMake(92.15, 2) controlPoint1: CGPointMake(97.22, 2.97) controlPoint2: CGPointMake(94.88, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(89.95, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 2)];
        [outerEdgePath closePath];
        [outerEdgePath moveToPoint: CGPointMake(100.55, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(100.6, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(100.55, 3.5)];
        [outerEdgePath closePath];
        outerEdgePath.miterLimit = 4;

        outerEdgePath.lineCapStyle = kCGLineCapRound;

        outerEdgePath.lineJoinStyle = kCGLineJoinRound;

        [Images.edgeColor setFill];
        [outerEdgePath fill];


        //// Light Reflection Drawing
        UIBezierPath* lightReflectionPath = UIBezierPath.bezierPath;
        [lightReflectionPath moveToPoint: CGPointMake(21.85, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(19.35, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(16.5, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(4.5, 12)];
        [lightReflectionPath addCurveToPoint: CGPointMake(7.1, 5.2) controlPoint1: CGPointMake(4.5, 9.37) controlPoint2: CGPointMake(5.37, 7.1)];
        [lightReflectionPath addLineToPoint: CGPointMake(7.35, 4.9)];
        [lightReflectionPath addCurveToPoint: CGPointMake(14.05, 2) controlPoint1: CGPointMake(9.22, 3.03) controlPoint2: CGPointMake(11.45, 2.07)];
        [lightReflectionPath addLineToPoint: CGPointMake(21.85, 2)];
        [lightReflectionPath addLineToPoint: CGPointMake(19, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(21.85, 22)];
        [lightReflectionPath closePath];
        [lightReflectionPath moveToPoint: CGPointMake(85, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(82.15, 2)];
        [lightReflectionPath addLineToPoint: CGPointMake(89.95, 2)];
        [lightReflectionPath addCurveToPoint: CGPointMake(96.65, 4.9) controlPoint1: CGPointMake(92.55, 2.07) controlPoint2: CGPointMake(94.78, 3.03)];
        [lightReflectionPath addLineToPoint: CGPointMake(96.9, 5.2)];
        [lightReflectionPath addCurveToPoint: CGPointMake(99.5, 12) controlPoint1: CGPointMake(98.63, 7.1) controlPoint2: CGPointMake(99.5, 9.37)];
        [lightReflectionPath addLineToPoint: CGPointMake(87.5, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(84.65, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(82.15, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(85, 12)];
        [lightReflectionPath closePath];
        lightReflectionPath.miterLimit = 4;

        lightReflectionPath.lineCapStyle = kCGLineCapRound;

        lightReflectionPath.lineJoinStyle = kCGLineJoinRound;

        [Images.lightColor setFill];
        [lightReflectionPath fill];


        //// Dark Reflection Drawing
        UIBezierPath* darkReflectionPath = UIBezierPath.bezierPath;
        [darkReflectionPath moveToPoint: CGPointMake(19.35, 22)];
        [darkReflectionPath addLineToPoint: CGPointMake(11.85, 22)];
        [darkReflectionPath addCurveToPoint: CGPointMake(4.85, 19.05) controlPoint1: CGPointMake(9.12, 22) controlPoint2: CGPointMake(6.78, 21.02)];
        [darkReflectionPath addCurveToPoint: CGPointMake(2, 12) controlPoint1: CGPointMake(2.95, 17.12) controlPoint2: CGPointMake(2, 14.77)];
        [darkReflectionPath addCurveToPoint: CGPointMake(4.6, 5.2) controlPoint1: CGPointMake(2, 9.37) controlPoint2: CGPointMake(2.87, 7.1)];
        [darkReflectionPath addLineToPoint: CGPointMake(4.85, 4.9)];
        [darkReflectionPath addCurveToPoint: CGPointMake(11.85, 2) controlPoint1: CGPointMake(6.78, 2.97) controlPoint2: CGPointMake(9.12, 2)];
        [darkReflectionPath addLineToPoint: CGPointMake(14.05, 2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(7.35, 4.9) controlPoint1: CGPointMake(11.45, 2.07) controlPoint2: CGPointMake(9.22, 3.03)];
        [darkReflectionPath addLineToPoint: CGPointMake(7.1, 5.2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(4.5, 12) controlPoint1: CGPointMake(5.37, 7.1) controlPoint2: CGPointMake(4.5, 9.37)];
        [darkReflectionPath addLineToPoint: CGPointMake(16.5, 12)];
        [darkReflectionPath addLineToPoint: CGPointMake(19.35, 22)];
        [darkReflectionPath closePath];
        [darkReflectionPath moveToPoint: CGPointMake(89.95, 2)];
        [darkReflectionPath addLineToPoint: CGPointMake(92.15, 2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(99.15, 4.9) controlPoint1: CGPointMake(94.88, 2) controlPoint2: CGPointMake(97.22, 2.97)];
        [darkReflectionPath addLineToPoint: CGPointMake(99.4, 5.2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(102, 12) controlPoint1: CGPointMake(101.13, 7.1) controlPoint2: CGPointMake(102, 9.37)];
        [darkReflectionPath addCurveToPoint: CGPointMake(99.15, 19.05) controlPoint1: CGPointMake(102, 14.77) controlPoint2: CGPointMake(101.05, 17.12)];
        [darkReflectionPath addCurveToPoint: CGPointMake(92.15, 22) controlPoint1: CGPointMake(97.22, 21.02) controlPoint2: CGPointMake(94.88, 22)];
        [darkReflectionPath addLineToPoint: CGPointMake(84.65, 22)];
        [darkReflectionPath addLineToPoint: CGPointMake(87.5, 12)];
        [darkReflectionPath addLineToPoint: CGPointMake(99.5, 12)];
        [darkReflectionPath addCurveToPoint: CGPointMake(96.9, 5.2) controlPoint1: CGPointMake(99.5, 9.37) controlPoint2: CGPointMake(98.63, 7.1)];
        [darkReflectionPath addLineToPoint: CGPointMake(96.65, 4.9)];
        [darkReflectionPath addCurveToPoint: CGPointMake(89.95, 2) controlPoint1: CGPointMake(94.78, 3.03) controlPoint2: CGPointMake(92.55, 2.07)];
        [darkReflectionPath closePath];
        darkReflectionPath.miterLimit = 4;

        darkReflectionPath.lineCapStyle = kCGLineCapRound;

        darkReflectionPath.lineJoinStyle = kCGLineJoinRound;

        [Images.darkColor setFill];
        [darkReflectionPath fill];


        //// Top Bar Drawing
        UIBezierPath* topBarPath = UIBezierPath.bezierPath;
        [topBarPath moveToPoint: CGPointMake(21.85, 2)];
        [topBarPath addLineToPoint: CGPointMake(82.15, 2)];
        [topBarPath addLineToPoint: CGPointMake(85, 12)];
        [topBarPath addLineToPoint: CGPointMake(19, 12)];
        [topBarPath addLineToPoint: CGPointMake(21.85, 2)];
        [topBarPath closePath];
        topBarPath.miterLimit = 4;

        topBarPath.lineCapStyle = kCGLineCapRound;

        topBarPath.lineJoinStyle = kCGLineJoinRound;

        [Images.topColor setFill];
        [topBarPath fill];


        //// Bottom Bar Drawing
        UIBezierPath* bottomBarPath = UIBezierPath.bezierPath;
        [bottomBarPath moveToPoint: CGPointMake(19, 12)];
        [bottomBarPath addLineToPoint: CGPointMake(85, 12)];
        [bottomBarPath addLineToPoint: CGPointMake(82.15, 22)];
        [bottomBarPath addLineToPoint: CGPointMake(21.85, 22)];
        [bottomBarPath addLineToPoint: CGPointMake(19, 12)];
        [bottomBarPath closePath];
        bottomBarPath.miterLimit = 4;

        bottomBarPath.lineCapStyle = kCGLineCapRound;

        bottomBarPath.lineJoinStyle = kCGLineJoinRound;

        [Images.bottomColor setFill];
        [bottomBarPath fill];
    }
}

+ (void)drawBall
{

    //// Ball Image
    {
        //// Ball Border Drawing
        UIBezierPath* ballBorderPath = UIBezierPath.bezierPath;
        [ballBorderPath moveToPoint: CGPointMake(2.2, 8.85)];
        [ballBorderPath addCurveToPoint: CGPointMake(1.95, 11) controlPoint1: CGPointMake(2.03, 9.52) controlPoint2: CGPointMake(1.95, 10.23)];
        [ballBorderPath addCurveToPoint: CGPointMake(4.55, 17.35) controlPoint1: CGPointMake(1.95, 13.5) controlPoint2: CGPointMake(2.82, 15.62)];
        [ballBorderPath addCurveToPoint: CGPointMake(10.95, 20) controlPoint1: CGPointMake(6.32, 19.12) controlPoint2: CGPointMake(8.45, 20)];
        [ballBorderPath addCurveToPoint: CGPointMake(17.3, 17.35) controlPoint1: CGPointMake(13.45, 20) controlPoint2: CGPointMake(15.57, 19.12)];
        [ballBorderPath addCurveToPoint: CGPointMake(19.95, 11) controlPoint1: CGPointMake(19.07, 15.62) controlPoint2: CGPointMake(19.95, 13.5)];
        [ballBorderPath addLineToPoint: CGPointMake(19.7, 8.85)];
        [ballBorderPath addCurveToPoint: CGPointMake(17.3, 4.6) controlPoint1: CGPointMake(19.33, 7.25) controlPoint2: CGPointMake(18.53, 5.83)];
        [ballBorderPath addCurveToPoint: CGPointMake(12.55, 2.15) controlPoint1: CGPointMake(15.93, 3.23) controlPoint2: CGPointMake(14.35, 2.42)];
        [ballBorderPath addLineToPoint: CGPointMake(10.95, 2)];
        [ballBorderPath addLineToPoint: CGPointMake(9.4, 2.15)];
        [ballBorderPath addCurveToPoint: CGPointMake(4.55, 4.6) controlPoint1: CGPointMake(7.53, 2.42) controlPoint2: CGPointMake(5.92, 3.23)];
        [ballBorderPath addCurveToPoint: CGPointMake(2.2, 8.85) controlPoint1: CGPointMake(3.35, 5.83) controlPoint2: CGPointMake(2.57, 7.25)];
        [ballBorderPath closePath];
        [ballBorderPath moveToPoint: CGPointMake(-0.05, 11)];
        [ballBorderPath addCurveToPoint: CGPointMake(3.15, 3.2) controlPoint1: CGPointMake(-0.05, 7.97) controlPoint2: CGPointMake(1.02, 5.37)];
        [ballBorderPath addCurveToPoint: CGPointMake(10.95, 0) controlPoint1: CGPointMake(5.32, 1.07) controlPoint2: CGPointMake(7.92, 0)];
        [ballBorderPath addCurveToPoint: CGPointMake(18.75, 3.2) controlPoint1: CGPointMake(14.02, 0) controlPoint2: CGPointMake(16.62, 1.07)];
        [ballBorderPath addCurveToPoint: CGPointMake(21.95, 11) controlPoint1: CGPointMake(20.88, 5.33) controlPoint2: CGPointMake(21.95, 7.93)];
        [ballBorderPath addCurveToPoint: CGPointMake(18.75, 18.75) controlPoint1: CGPointMake(21.95, 14.03) controlPoint2: CGPointMake(20.88, 16.62)];
        [ballBorderPath addCurveToPoint: CGPointMake(10.95, 22) controlPoint1: CGPointMake(16.58, 20.92) controlPoint2: CGPointMake(13.98, 22)];
        [ballBorderPath addCurveToPoint: CGPointMake(3.15, 18.8) controlPoint1: CGPointMake(7.88, 22) controlPoint2: CGPointMake(5.28, 20.93)];
        [ballBorderPath addCurveToPoint: CGPointMake(-0.05, 11) controlPoint1: CGPointMake(1.02, 16.67) controlPoint2: CGPointMake(-0.05, 14.07)];
        [ballBorderPath closePath];
        [ballBorderPath moveToPoint: CGPointMake(18.75, 18.75)];
        [ballBorderPath addLineToPoint: CGPointMake(18.7, 18.8)];
        [ballBorderPath addLineToPoint: CGPointMake(18.75, 18.75)];
        [ballBorderPath closePath];
        ballBorderPath.miterLimit = 4;

        ballBorderPath.lineCapStyle = kCGLineCapRound;

        ballBorderPath.lineJoinStyle = kCGLineJoinRound;

        [Images.ballBorderColor setFill];
        [ballBorderPath fill];


        //// Ball Bottom Drawing
        UIBezierPath* ballBottomPath = UIBezierPath.bezierPath;
        [ballBottomPath moveToPoint: CGPointMake(1.95, 11)];
        [ballBottomPath addCurveToPoint: CGPointMake(2.2, 8.85) controlPoint1: CGPointMake(1.95, 10.23) controlPoint2: CGPointMake(2.03, 9.52)];
        [ballBottomPath addCurveToPoint: CGPointMake(4.55, 11.35) controlPoint1: CGPointMake(2.57, 9.78) controlPoint2: CGPointMake(3.35, 10.62)];
        [ballBottomPath addCurveToPoint: CGPointMake(10.95, 13) controlPoint1: CGPointMake(6.32, 12.45) controlPoint2: CGPointMake(8.45, 13)];
        [ballBottomPath addCurveToPoint: CGPointMake(17.3, 11.35) controlPoint1: CGPointMake(13.45, 13) controlPoint2: CGPointMake(15.57, 12.45)];
        [ballBottomPath addCurveToPoint: CGPointMake(19.7, 8.85) controlPoint1: CGPointMake(18.53, 10.62) controlPoint2: CGPointMake(19.33, 9.78)];
        [ballBottomPath addLineToPoint: CGPointMake(19.95, 11)];
        [ballBottomPath addCurveToPoint: CGPointMake(17.3, 17.35) controlPoint1: CGPointMake(19.95, 13.5) controlPoint2: CGPointMake(19.07, 15.62)];
        [ballBottomPath addCurveToPoint: CGPointMake(10.95, 20) controlPoint1: CGPointMake(15.57, 19.12) controlPoint2: CGPointMake(13.45, 20)];
        [ballBottomPath addCurveToPoint: CGPointMake(4.55, 17.35) controlPoint1: CGPointMake(8.45, 20) controlPoint2: CGPointMake(6.32, 19.12)];
        [ballBottomPath addCurveToPoint: CGPointMake(1.95, 11) controlPoint1: CGPointMake(2.82, 15.62) controlPoint2: CGPointMake(1.95, 13.5)];
        [ballBottomPath closePath];
        ballBottomPath.miterLimit = 4;

        ballBottomPath.lineCapStyle = kCGLineCapRound;

        ballBottomPath.lineJoinStyle = kCGLineJoinRound;

        [Images.ballBottomColor setFill];
        [ballBottomPath fill];


        //// Ball Reflection Drawing
        UIBezierPath* ballReflectionPath = UIBezierPath.bezierPath;
        [ballReflectionPath moveToPoint: CGPointMake(19.7, 8.85)];
        [ballReflectionPath addCurveToPoint: CGPointMake(17.3, 11.35) controlPoint1: CGPointMake(19.33, 9.78) controlPoint2: CGPointMake(18.53, 10.62)];
        [ballReflectionPath addCurveToPoint: CGPointMake(10.95, 13) controlPoint1: CGPointMake(15.57, 12.45) controlPoint2: CGPointMake(13.45, 13)];
        [ballReflectionPath addCurveToPoint: CGPointMake(4.55, 11.35) controlPoint1: CGPointMake(8.45, 13) controlPoint2: CGPointMake(6.32, 12.45)];
        [ballReflectionPath addCurveToPoint: CGPointMake(2.2, 8.85) controlPoint1: CGPointMake(3.35, 10.62) controlPoint2: CGPointMake(2.57, 9.78)];
        [ballReflectionPath addCurveToPoint: CGPointMake(4.55, 4.6) controlPoint1: CGPointMake(2.57, 7.25) controlPoint2: CGPointMake(3.35, 5.83)];
        [ballReflectionPath addCurveToPoint: CGPointMake(9.4, 2.15) controlPoint1: CGPointMake(5.92, 3.23) controlPoint2: CGPointMake(7.53, 2.42)];
        [ballReflectionPath addLineToPoint: CGPointMake(10.95, 2.05)];
        [ballReflectionPath addLineToPoint: CGPointMake(12.55, 2.15)];
        [ballReflectionPath addCurveToPoint: CGPointMake(17.3, 4.6) controlPoint1: CGPointMake(14.35, 2.42) controlPoint2: CGPointMake(15.93, 3.23)];
        [ballReflectionPath addCurveToPoint: CGPointMake(19.7, 8.85) controlPoint1: CGPointMake(18.53, 5.83) controlPoint2: CGPointMake(19.33, 7.25)];
        [ballReflectionPath closePath];
        [ballReflectionPath moveToPoint: CGPointMake(17.05, 7.5)];
        [ballReflectionPath addCurveToPoint: CGPointMake(16.3, 5.7) controlPoint1: CGPointMake(17.05, 6.8) controlPoint2: CGPointMake(16.8, 6.2)];
        [ballReflectionPath addCurveToPoint: CGPointMake(14.55, 5) controlPoint1: CGPointMake(15.83, 5.23) controlPoint2: CGPointMake(15.25, 5)];
        [ballReflectionPath addCurveToPoint: CGPointMake(12.8, 5.7) controlPoint1: CGPointMake(13.88, 5) controlPoint2: CGPointMake(13.3, 5.23)];
        [ballReflectionPath addCurveToPoint: CGPointMake(12.05, 7.5) controlPoint1: CGPointMake(12.3, 6.2) controlPoint2: CGPointMake(12.05, 6.8)];
        [ballReflectionPath addCurveToPoint: CGPointMake(12.8, 9.25) controlPoint1: CGPointMake(12.05, 8.2) controlPoint2: CGPointMake(12.3, 8.78)];
        [ballReflectionPath addCurveToPoint: CGPointMake(14.55, 10) controlPoint1: CGPointMake(13.3, 9.75) controlPoint2: CGPointMake(13.88, 10)];
        [ballReflectionPath addCurveToPoint: CGPointMake(16.3, 9.25) controlPoint1: CGPointMake(15.25, 10) controlPoint2: CGPointMake(15.83, 9.75)];
        [ballReflectionPath addCurveToPoint: CGPointMake(17.05, 7.5) controlPoint1: CGPointMake(16.8, 8.78) controlPoint2: CGPointMake(17.05, 8.2)];
        [ballReflectionPath closePath];
        ballReflectionPath.miterLimit = 4;

        ballReflectionPath.lineCapStyle = kCGLineCapRound;

        ballReflectionPath.lineJoinStyle = kCGLineJoinRound;

        [Images.ballReflectionColor setFill];
        [ballReflectionPath fill];


        //// Ball Glow Drawing
        UIBezierPath* ballGlowPath = UIBezierPath.bezierPath;
        [ballGlowPath moveToPoint: CGPointMake(16.3, 5.7)];
        [ballGlowPath addCurveToPoint: CGPointMake(17.05, 7.5) controlPoint1: CGPointMake(16.8, 6.2) controlPoint2: CGPointMake(17.05, 6.8)];
        [ballGlowPath addCurveToPoint: CGPointMake(16.3, 9.25) controlPoint1: CGPointMake(17.05, 8.2) controlPoint2: CGPointMake(16.8, 8.78)];
        [ballGlowPath addCurveToPoint: CGPointMake(14.55, 10) controlPoint1: CGPointMake(15.83, 9.75) controlPoint2: CGPointMake(15.25, 10)];
        [ballGlowPath addCurveToPoint: CGPointMake(12.8, 9.25) controlPoint1: CGPointMake(13.88, 10) controlPoint2: CGPointMake(13.3, 9.75)];
        [ballGlowPath addCurveToPoint: CGPointMake(12.05, 7.5) controlPoint1: CGPointMake(12.3, 8.78) controlPoint2: CGPointMake(12.05, 8.2)];
        [ballGlowPath addCurveToPoint: CGPointMake(12.8, 5.7) controlPoint1: CGPointMake(12.05, 6.8) controlPoint2: CGPointMake(12.3, 6.2)];
        [ballGlowPath addCurveToPoint: CGPointMake(14.55, 5) controlPoint1: CGPointMake(13.3, 5.23) controlPoint2: CGPointMake(13.88, 5)];
        [ballGlowPath addCurveToPoint: CGPointMake(16.3, 5.7) controlPoint1: CGPointMake(15.25, 5) controlPoint2: CGPointMake(15.83, 5.23)];
        [ballGlowPath closePath];
        ballGlowPath.miterLimit = 4;

        ballGlowPath.lineCapStyle = kCGLineCapRound;

        ballGlowPath.lineJoinStyle = kCGLineJoinRound;

        [Images.ballGlowColor setFill];
        [ballGlowPath fill];
    }
}

+ (void)drawBrickWithBrickColor: (UIColor*)brickColor
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* whiteAlpha0 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0];
    CGFloat brickColorHSBA[4];
    [brickColor getHue: &brickColorHSBA[0] saturation: &brickColorHSBA[1] brightness: &brickColorHSBA[2] alpha: &brickColorHSBA[3]];

    UIColor* brickCenterColor = [UIColor colorWithHue: brickColorHSBA[0] saturation: brickColorHSBA[1] brightness: 0.72 alpha: brickColorHSBA[3]];
    UIColor* brickTopColor = [UIColor colorWithHue: brickColorHSBA[0] saturation: brickColorHSBA[1] brightness: 0.83 alpha: brickColorHSBA[3]];
    UIColor* brickBorderColor = [UIColor colorWithHue: brickColorHSBA[0] saturation: brickColorHSBA[1] brightness: 0.473 alpha: brickColorHSBA[3]];
    UIColor* brickBottomColor = [UIColor colorWithHue: brickColorHSBA[0] saturation: brickColorHSBA[1] brightness: 0.625 alpha: brickColorHSBA[3]];
    UIColor* whiteAlpha2 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.2];

    //// Gradient Declarations
    CGFloat brickGradientLocations[] = {0, 1};
    CGGradientRef brickGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)whiteAlpha0.CGColor, (id)whiteAlpha2.CGColor], brickGradientLocations);

    //// BrickGroup
    {
        //// brickBorder Drawing
        UIBezierPath* brickBorderPath = UIBezierPath.bezierPath;
        [brickBorderPath moveToPoint: CGPointMake(49.57, 0.47)];
        [brickBorderPath addCurveToPoint: CGPointMake(50, 1.56) controlPoint1: CGPointMake(49.86, 0.76) controlPoint2: CGPointMake(50, 1.12)];
        [brickBorderPath addLineToPoint: CGPointMake(50, 23.44)];
        [brickBorderPath addCurveToPoint: CGPointMake(49.57, 24.57) controlPoint1: CGPointMake(50, 23.88) controlPoint2: CGPointMake(49.86, 24.26)];
        [brickBorderPath addCurveToPoint: CGPointMake(48.44, 25) controlPoint1: CGPointMake(49.26, 24.86) controlPoint2: CGPointMake(48.88, 25)];
        [brickBorderPath addLineToPoint: CGPointMake(1.56, 25)];
        [brickBorderPath addCurveToPoint: CGPointMake(0.47, 24.57) controlPoint1: CGPointMake(1.12, 25) controlPoint2: CGPointMake(0.76, 24.86)];
        [brickBorderPath addCurveToPoint: CGPointMake(0, 23.44) controlPoint1: CGPointMake(0.16, 24.26) controlPoint2: CGPointMake(0, 23.88)];
        [brickBorderPath addLineToPoint: CGPointMake(0, 1.56)];
        [brickBorderPath addCurveToPoint: CGPointMake(0.47, 0.47) controlPoint1: CGPointMake(0, 1.12) controlPoint2: CGPointMake(0.16, 0.76)];
        [brickBorderPath addCurveToPoint: CGPointMake(1.56, 0) controlPoint1: CGPointMake(0.76, 0.16) controlPoint2: CGPointMake(1.12, 0)];
        [brickBorderPath addLineToPoint: CGPointMake(48.44, 0)];
        [brickBorderPath addCurveToPoint: CGPointMake(49.57, 0.47) controlPoint1: CGPointMake(48.88, 0) controlPoint2: CGPointMake(49.26, 0.16)];
        [brickBorderPath closePath];
        [brickBorderPath moveToPoint: CGPointMake(48.44, 23.44)];
        [brickBorderPath addLineToPoint: CGPointMake(48.44, 1.56)];
        [brickBorderPath addLineToPoint: CGPointMake(1.56, 1.56)];
        [brickBorderPath addLineToPoint: CGPointMake(1.56, 23.44)];
        [brickBorderPath addLineToPoint: CGPointMake(48.44, 23.44)];
        [brickBorderPath closePath];
        brickBorderPath.miterLimit = 4;

        brickBorderPath.lineCapStyle = kCGLineCapRound;

        brickBorderPath.lineJoinStyle = kCGLineJoinRound;

        [brickBorderColor setFill];
        [brickBorderPath fill];


        //// brickInside Drawing
        UIBezierPath* brickInsidePath = UIBezierPath.bezierPath;
        [brickInsidePath moveToPoint: CGPointMake(48.44, 1.56)];
        [brickInsidePath addLineToPoint: CGPointMake(48.44, 23.44)];
        [brickInsidePath addLineToPoint: CGPointMake(43.75, 18.75)];
        [brickInsidePath addLineToPoint: CGPointMake(43.75, 6.25)];
        [brickInsidePath addLineToPoint: CGPointMake(48.44, 1.56)];
        [brickInsidePath closePath];
        [brickInsidePath moveToPoint: CGPointMake(1.56, 23.44)];
        [brickInsidePath addLineToPoint: CGPointMake(1.56, 1.56)];
        [brickInsidePath addLineToPoint: CGPointMake(6.25, 6.25)];
        [brickInsidePath addLineToPoint: CGPointMake(6.25, 18.75)];
        [brickInsidePath addLineToPoint: CGPointMake(1.56, 23.44)];
        [brickInsidePath closePath];
        brickInsidePath.miterLimit = 4;

        brickInsidePath.lineCapStyle = kCGLineCapRound;

        brickInsidePath.lineJoinStyle = kCGLineJoinRound;

        [brickCenterColor setFill];
        [brickInsidePath fill];


        //// brickBottom Drawing
        UIBezierPath* brickBottomPath = UIBezierPath.bezierPath;
        [brickBottomPath moveToPoint: CGPointMake(48.44, 23.44)];
        [brickBottomPath addLineToPoint: CGPointMake(1.56, 23.44)];
        [brickBottomPath addLineToPoint: CGPointMake(6.25, 18.75)];
        [brickBottomPath addLineToPoint: CGPointMake(43.75, 18.75)];
        [brickBottomPath addLineToPoint: CGPointMake(48.44, 23.44)];
        [brickBottomPath closePath];
        brickBottomPath.miterLimit = 4;

        brickBottomPath.lineCapStyle = kCGLineCapRound;

        brickBottomPath.lineJoinStyle = kCGLineJoinRound;

        [brickBottomColor setFill];
        [brickBottomPath fill];


        //// brickTop Drawing
        UIBezierPath* brickTopPath = UIBezierPath.bezierPath;
        [brickTopPath moveToPoint: CGPointMake(1.56, 1.56)];
        [brickTopPath addLineToPoint: CGPointMake(48.44, 1.56)];
        [brickTopPath addLineToPoint: CGPointMake(43.75, 6.25)];
        [brickTopPath addLineToPoint: CGPointMake(6.25, 6.25)];
        [brickTopPath addLineToPoint: CGPointMake(1.56, 1.56)];
        [brickTopPath closePath];
        brickTopPath.miterLimit = 4;

        brickTopPath.lineCapStyle = kCGLineCapRound;

        brickTopPath.lineJoinStyle = kCGLineJoinRound;

        [brickTopColor setFill];
        [brickTopPath fill];


        //// brickCenter Drawing
        UIBezierPath* brickCenterPath = UIBezierPath.bezierPath;
        [brickCenterPath moveToPoint: CGPointMake(43.75, 6.25)];
        [brickCenterPath addLineToPoint: CGPointMake(43.75, 18.75)];
        [brickCenterPath addLineToPoint: CGPointMake(6.25, 18.75)];
        [brickCenterPath addLineToPoint: CGPointMake(6.25, 6.25)];
        [brickCenterPath addLineToPoint: CGPointMake(43.75, 6.25)];
        [brickCenterPath closePath];
        brickCenterPath.miterLimit = 4;

        brickCenterPath.lineCapStyle = kCGLineCapRound;

        brickCenterPath.lineJoinStyle = kCGLineJoinRound;

        [brickColor setFill];
        [brickCenterPath fill];


        //// brickTopHalf Drawing
        UIBezierPath* brickTopHalfPath = UIBezierPath.bezierPath;
        [brickTopHalfPath moveToPoint: CGPointMake(1.56, 1.56)];
        [brickTopHalfPath addLineToPoint: CGPointMake(48.44, 1.56)];
        [brickTopHalfPath addLineToPoint: CGPointMake(48.44, 15.43)];
        [brickTopHalfPath addLineToPoint: CGPointMake(43.75, 12.5)];
        [brickTopHalfPath addLineToPoint: CGPointMake(6.25, 12.5)];
        [brickTopHalfPath addLineToPoint: CGPointMake(1.56, 15.43)];
        [brickTopHalfPath addLineToPoint: CGPointMake(1.56, 1.56)];
        [brickTopHalfPath closePath];
        brickTopHalfPath.miterLimit = 4;

        brickTopHalfPath.lineCapStyle = kCGLineCapRound;

        brickTopHalfPath.lineJoinStyle = kCGLineJoinRound;

        CGContextSaveGState(context);
        [brickTopHalfPath addClip];
        CGContextDrawLinearGradient(context, brickGradient,
            CGPointMake(25, 1.56),
            CGPointMake(25, 15.39),
            kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(brickGradient);
    CGColorSpaceRelease(colorSpace);
}

#pragma mark Generated Images

+ (UIImage*)imageOfPaddle
{
    if (_imageOfPaddle)
        return _imageOfPaddle;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(104, 24), NO, 0.0f);
    [Images drawPaddle];

    _imageOfPaddle = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfPaddle;
}

+ (UIImage*)imageOfBall
{
    if (_imageOfBall)
        return _imageOfBall;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(22, 22), NO, 0.0f);
    [Images drawBall];

    _imageOfBall = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfBall;
}

+ (UIImage*)imageOfBrickWithBrickColor: (UIColor*)brickColor
{
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 25), NO, 0.0f);
    [Images drawBrickWithBrickColor: brickColor];

    UIImage* imageOfBrick = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return imageOfBrick;
}

#pragma mark Customization Infrastructure

- (void)setPaddleTargets: (NSArray*)paddleTargets
{
    _paddleTargets = paddleTargets;

    for (id target in self.paddleTargets)
        [target setImage: Images.imageOfPaddle];
}

- (void)setBallTargets: (NSArray*)ballTargets
{
    _ballTargets = ballTargets;

    for (id target in self.ballTargets)
        [target setImage: Images.imageOfBall];
}


@end
