//
//  Images.m
//  BrickBreaker
//
//  Created by Kenneth Wilcox on 10/21/14.
//  Copyright (c) 2014 Kenneth Wilcox. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "Images.h"


@implementation Images

#pragma mark Cache

static UIColor* _lightColor = nil;
static UIColor* _bottomColor = nil;
static UIColor* _edgeColor = nil;
static UIColor* _topColor = nil;
static UIColor* _darkColor = nil;

static UIImage* _imageOfPaddle = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _lightColor = [UIColor colorWithRed: 0.244 green: 0.694 blue: 0.925 alpha: 1];
    _bottomColor = [UIColor colorWithRed: 0.774 green: 0.774 blue: 0.774 alpha: 1];
    _edgeColor = [UIColor colorWithRed: 0.076 green: 0.411 blue: 0.606 alpha: 1];
    _topColor = [UIColor colorWithRed: 0.816 green: 0.816 blue: 0.816 alpha: 1];
    _darkColor = [UIColor colorWithRed: 0.099 green: 0.576 blue: 0.858 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)lightColor { return _lightColor; }
+ (UIColor*)bottomColor { return _bottomColor; }
+ (UIColor*)edgeColor { return _edgeColor; }
+ (UIColor*)topColor { return _topColor; }
+ (UIColor*)darkColor { return _darkColor; }

#pragma mark Drawing Methods

+ (void)drawPaddle;
{

    //// Paddle1
    {
        //// Outer Edge Drawing
        UIBezierPath* outerEdgePath = UIBezierPath.bezierPath;
        [outerEdgePath moveToPoint: CGPointMake(21.85, 0)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(14.05, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(11.85, 2)];
        [outerEdgePath addCurveToPoint: CGPointMake(4.85, 4.9) controlPoint1: CGPointMake(9.12, 2) controlPoint2: CGPointMake(6.78, 2.97)];
        [outerEdgePath addLineToPoint: CGPointMake(4.6, 5.2)];
        [outerEdgePath addCurveToPoint: CGPointMake(2, 12) controlPoint1: CGPointMake(2.87, 7.1) controlPoint2: CGPointMake(2, 9.37)];
        [outerEdgePath addCurveToPoint: CGPointMake(4.85, 19.05) controlPoint1: CGPointMake(2, 14.77) controlPoint2: CGPointMake(2.95, 17.12)];
        [outerEdgePath addCurveToPoint: CGPointMake(11.85, 22) controlPoint1: CGPointMake(6.78, 21.02) controlPoint2: CGPointMake(9.12, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(19.35, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 24)];
        [outerEdgePath addLineToPoint: CGPointMake(11.85, 24)];
        [outerEdgePath addCurveToPoint: CGPointMake(3.45, 20.45) controlPoint1: CGPointMake(8.55, 24) controlPoint2: CGPointMake(5.75, 22.82)];
        [outerEdgePath addCurveToPoint: CGPointMake(0, 12) controlPoint1: CGPointMake(1.15, 18.12) controlPoint2: CGPointMake(0, 15.3)];
        [outerEdgePath addCurveToPoint: CGPointMake(3.1, 3.9) controlPoint1: CGPointMake(0, 8.87) controlPoint2: CGPointMake(1.03, 6.17)];
        [outerEdgePath addLineToPoint: CGPointMake(3.4, 3.5)];
        [outerEdgePath addCurveToPoint: CGPointMake(7.6, 0.75) controlPoint1: CGPointMake(4.67, 2.23) controlPoint2: CGPointMake(6.07, 1.32)];
        [outerEdgePath addCurveToPoint: CGPointMake(11.85, 0) controlPoint1: CGPointMake(8.9, 0.25) controlPoint2: CGPointMake(10.32, 0)];
        [outerEdgePath addLineToPoint: CGPointMake(21.85, 0)];
        [outerEdgePath closePath];
        [outerEdgePath moveToPoint: CGPointMake(3.4, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(3.45, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(3.4, 3.5)];
        [outerEdgePath closePath];
        [outerEdgePath moveToPoint: CGPointMake(82.15, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 0)];
        [outerEdgePath addLineToPoint: CGPointMake(92.15, 0)];
        [outerEdgePath addCurveToPoint: CGPointMake(96.4, 0.75) controlPoint1: CGPointMake(93.68, 0) controlPoint2: CGPointMake(95.1, 0.25)];
        [outerEdgePath addCurveToPoint: CGPointMake(100.55, 3.5) controlPoint1: CGPointMake(97.93, 1.32) controlPoint2: CGPointMake(99.32, 2.23)];
        [outerEdgePath addLineToPoint: CGPointMake(100.9, 3.9)];
        [outerEdgePath addCurveToPoint: CGPointMake(104, 12) controlPoint1: CGPointMake(102.97, 6.17) controlPoint2: CGPointMake(104, 8.87)];
        [outerEdgePath addCurveToPoint: CGPointMake(100.55, 20.45) controlPoint1: CGPointMake(104, 15.3) controlPoint2: CGPointMake(102.85, 18.12)];
        [outerEdgePath addCurveToPoint: CGPointMake(92.15, 24) controlPoint1: CGPointMake(98.25, 22.82) controlPoint2: CGPointMake(95.45, 24)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 24)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(84.65, 22)];
        [outerEdgePath addLineToPoint: CGPointMake(92.15, 22)];
        [outerEdgePath addCurveToPoint: CGPointMake(99.15, 19.05) controlPoint1: CGPointMake(94.88, 22) controlPoint2: CGPointMake(97.22, 21.02)];
        [outerEdgePath addCurveToPoint: CGPointMake(102, 12) controlPoint1: CGPointMake(101.05, 17.12) controlPoint2: CGPointMake(102, 14.77)];
        [outerEdgePath addCurveToPoint: CGPointMake(99.4, 5.2) controlPoint1: CGPointMake(102, 9.37) controlPoint2: CGPointMake(101.13, 7.1)];
        [outerEdgePath addLineToPoint: CGPointMake(99.15, 4.9)];
        [outerEdgePath addCurveToPoint: CGPointMake(92.15, 2) controlPoint1: CGPointMake(97.22, 2.97) controlPoint2: CGPointMake(94.88, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(89.95, 2)];
        [outerEdgePath addLineToPoint: CGPointMake(82.15, 2)];
        [outerEdgePath closePath];
        [outerEdgePath moveToPoint: CGPointMake(100.55, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(100.6, 3.5)];
        [outerEdgePath addLineToPoint: CGPointMake(100.55, 3.5)];
        [outerEdgePath closePath];
        outerEdgePath.miterLimit = 4;

        outerEdgePath.lineCapStyle = kCGLineCapRound;

        outerEdgePath.lineJoinStyle = kCGLineJoinRound;

        [Images.edgeColor setFill];
        [outerEdgePath fill];


        //// Light Reflection Drawing
        UIBezierPath* lightReflectionPath = UIBezierPath.bezierPath;
        [lightReflectionPath moveToPoint: CGPointMake(21.85, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(19.35, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(16.5, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(4.5, 12)];
        [lightReflectionPath addCurveToPoint: CGPointMake(7.1, 5.2) controlPoint1: CGPointMake(4.5, 9.37) controlPoint2: CGPointMake(5.37, 7.1)];
        [lightReflectionPath addLineToPoint: CGPointMake(7.35, 4.9)];
        [lightReflectionPath addCurveToPoint: CGPointMake(14.05, 2) controlPoint1: CGPointMake(9.22, 3.03) controlPoint2: CGPointMake(11.45, 2.07)];
        [lightReflectionPath addLineToPoint: CGPointMake(21.85, 2)];
        [lightReflectionPath addLineToPoint: CGPointMake(19, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(21.85, 22)];
        [lightReflectionPath closePath];
        [lightReflectionPath moveToPoint: CGPointMake(85, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(82.15, 2)];
        [lightReflectionPath addLineToPoint: CGPointMake(89.95, 2)];
        [lightReflectionPath addCurveToPoint: CGPointMake(96.65, 4.9) controlPoint1: CGPointMake(92.55, 2.07) controlPoint2: CGPointMake(94.78, 3.03)];
        [lightReflectionPath addLineToPoint: CGPointMake(96.9, 5.2)];
        [lightReflectionPath addCurveToPoint: CGPointMake(99.5, 12) controlPoint1: CGPointMake(98.63, 7.1) controlPoint2: CGPointMake(99.5, 9.37)];
        [lightReflectionPath addLineToPoint: CGPointMake(87.5, 12)];
        [lightReflectionPath addLineToPoint: CGPointMake(84.65, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(82.15, 22)];
        [lightReflectionPath addLineToPoint: CGPointMake(85, 12)];
        [lightReflectionPath closePath];
        lightReflectionPath.miterLimit = 4;

        lightReflectionPath.lineCapStyle = kCGLineCapRound;

        lightReflectionPath.lineJoinStyle = kCGLineJoinRound;

        [Images.lightColor setFill];
        [lightReflectionPath fill];


        //// Dark Reflection Drawing
        UIBezierPath* darkReflectionPath = UIBezierPath.bezierPath;
        [darkReflectionPath moveToPoint: CGPointMake(19.35, 22)];
        [darkReflectionPath addLineToPoint: CGPointMake(11.85, 22)];
        [darkReflectionPath addCurveToPoint: CGPointMake(4.85, 19.05) controlPoint1: CGPointMake(9.12, 22) controlPoint2: CGPointMake(6.78, 21.02)];
        [darkReflectionPath addCurveToPoint: CGPointMake(2, 12) controlPoint1: CGPointMake(2.95, 17.12) controlPoint2: CGPointMake(2, 14.77)];
        [darkReflectionPath addCurveToPoint: CGPointMake(4.6, 5.2) controlPoint1: CGPointMake(2, 9.37) controlPoint2: CGPointMake(2.87, 7.1)];
        [darkReflectionPath addLineToPoint: CGPointMake(4.85, 4.9)];
        [darkReflectionPath addCurveToPoint: CGPointMake(11.85, 2) controlPoint1: CGPointMake(6.78, 2.97) controlPoint2: CGPointMake(9.12, 2)];
        [darkReflectionPath addLineToPoint: CGPointMake(14.05, 2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(7.35, 4.9) controlPoint1: CGPointMake(11.45, 2.07) controlPoint2: CGPointMake(9.22, 3.03)];
        [darkReflectionPath addLineToPoint: CGPointMake(7.1, 5.2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(4.5, 12) controlPoint1: CGPointMake(5.37, 7.1) controlPoint2: CGPointMake(4.5, 9.37)];
        [darkReflectionPath addLineToPoint: CGPointMake(16.5, 12)];
        [darkReflectionPath addLineToPoint: CGPointMake(19.35, 22)];
        [darkReflectionPath closePath];
        [darkReflectionPath moveToPoint: CGPointMake(89.95, 2)];
        [darkReflectionPath addLineToPoint: CGPointMake(92.15, 2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(99.15, 4.9) controlPoint1: CGPointMake(94.88, 2) controlPoint2: CGPointMake(97.22, 2.97)];
        [darkReflectionPath addLineToPoint: CGPointMake(99.4, 5.2)];
        [darkReflectionPath addCurveToPoint: CGPointMake(102, 12) controlPoint1: CGPointMake(101.13, 7.1) controlPoint2: CGPointMake(102, 9.37)];
        [darkReflectionPath addCurveToPoint: CGPointMake(99.15, 19.05) controlPoint1: CGPointMake(102, 14.77) controlPoint2: CGPointMake(101.05, 17.12)];
        [darkReflectionPath addCurveToPoint: CGPointMake(92.15, 22) controlPoint1: CGPointMake(97.22, 21.02) controlPoint2: CGPointMake(94.88, 22)];
        [darkReflectionPath addLineToPoint: CGPointMake(84.65, 22)];
        [darkReflectionPath addLineToPoint: CGPointMake(87.5, 12)];
        [darkReflectionPath addLineToPoint: CGPointMake(99.5, 12)];
        [darkReflectionPath addCurveToPoint: CGPointMake(96.9, 5.2) controlPoint1: CGPointMake(99.5, 9.37) controlPoint2: CGPointMake(98.63, 7.1)];
        [darkReflectionPath addLineToPoint: CGPointMake(96.65, 4.9)];
        [darkReflectionPath addCurveToPoint: CGPointMake(89.95, 2) controlPoint1: CGPointMake(94.78, 3.03) controlPoint2: CGPointMake(92.55, 2.07)];
        [darkReflectionPath closePath];
        darkReflectionPath.miterLimit = 4;

        darkReflectionPath.lineCapStyle = kCGLineCapRound;

        darkReflectionPath.lineJoinStyle = kCGLineJoinRound;

        [Images.darkColor setFill];
        [darkReflectionPath fill];


        //// Top Bar Drawing
        UIBezierPath* topBarPath = UIBezierPath.bezierPath;
        [topBarPath moveToPoint: CGPointMake(21.85, 2)];
        [topBarPath addLineToPoint: CGPointMake(82.15, 2)];
        [topBarPath addLineToPoint: CGPointMake(85, 12)];
        [topBarPath addLineToPoint: CGPointMake(19, 12)];
        [topBarPath addLineToPoint: CGPointMake(21.85, 2)];
        [topBarPath closePath];
        topBarPath.miterLimit = 4;

        topBarPath.lineCapStyle = kCGLineCapRound;

        topBarPath.lineJoinStyle = kCGLineJoinRound;

        [Images.topColor setFill];
        [topBarPath fill];


        //// Bottom Bar Drawing
        UIBezierPath* bottomBarPath = UIBezierPath.bezierPath;
        [bottomBarPath moveToPoint: CGPointMake(19, 12)];
        [bottomBarPath addLineToPoint: CGPointMake(85, 12)];
        [bottomBarPath addLineToPoint: CGPointMake(82.15, 22)];
        [bottomBarPath addLineToPoint: CGPointMake(21.85, 22)];
        [bottomBarPath addLineToPoint: CGPointMake(19, 12)];
        [bottomBarPath closePath];
        bottomBarPath.miterLimit = 4;

        bottomBarPath.lineCapStyle = kCGLineCapRound;

        bottomBarPath.lineJoinStyle = kCGLineJoinRound;

        [Images.bottomColor setFill];
        [bottomBarPath fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfPaddle;
{
    if (_imageOfPaddle)
        return _imageOfPaddle;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(106, 26), NO, 0.0f);
    [Images drawPaddle];
    _imageOfPaddle = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfPaddle;
}

#pragma mark Customization Infrastructure

- (void)setPaddleTargets: (NSArray*)paddleTargets
{
    _paddleTargets = paddleTargets;

    for (id target in self.paddleTargets)
        [target setImage: Images.imageOfPaddle];
}


@end
